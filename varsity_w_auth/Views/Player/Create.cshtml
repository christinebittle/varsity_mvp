@model varsity_w_auth.Models.ViewModels.UpdatePlayer

@{
    ViewBag.Title = "Create Player";
    Layout = "~/Views/Shared/_AdminView.cshtml";
}

@using (Html.BeginForm())
{
    //This will set a hidden input field with value "_RequestVerificationToken"
    //The PlayerController Create Method will look for this token
    //This helps secure the Create() method from being called from other pages.
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Create a New Player</h4>
    <div>
        @Html.ActionLink("Back to List", "List")
    </div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.player.PlayerFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.player.PlayerFirstName, new { htmlAttributes = new { @class = "form-control", Name = "PlayerFirstName" } })
            @Html.ValidationMessageFor(model => model.player.PlayerFirstName, "", new { @class = "text-danger", data_valmsg_for = "PlayerFirstName" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.player.PlayerLastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.player.PlayerLastName, new { htmlAttributes = new { @class = "form-control", Name = "PlayerLastName" } })
            @Html.ValidationMessageFor(model => model.player.PlayerLastName, "", new { @class = "text-danger", data_valmsg_for = "PlayerLastName" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.player.PlayerBio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.player.PlayerBio, new { @class = "form-control admin", Name = "PlayerBio" })
            @Html.ValidationMessageFor(model => model.player.PlayerBio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.player.TeamID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.allteams.Count() == 0)
            {
                <span>There are no teams yet. Please @Html.ActionLink("add a team", "Create", "Team") first.</span>
            }
            else
            {
            <select name="TeamID">
                @foreach (var team in Model.allteams)
                {
                    <option value="@team.TeamID">@team.TeamName</option>
                }
            </select>
            }

            
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @{ string noclick = ""; }
            @if (Model.allteams.Count() == 0)
            {
                noclick = "disabled";
            }
            <input type="submit" value="Create" class="btn btn-default @noclick" @noclick/>
        </div>
    </div>
</div>
}


