@model varsity_w_auth.Models.ViewModels.UpdateTeam

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_AdminView.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Update Team @Model.team.TeamName</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.team.TeamID, new { Name = "TeamID" })

    <div class="form-group">
        @Html.LabelFor(model => model.team.TeamName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.team.TeamName, new { htmlAttributes = new { @class = "form-control", Name = "TeamName" } })
            @Html.ValidationMessageFor(model => model.team.TeamName, "", new { @class = "text-danger", @data_valmsg_for="TeamName" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.team.TeamBio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.team.TeamBio, new { @class = "form-control admin", Name = "TeamBio" })
            @Html.ValidationMessageFor(model => model.team.TeamBio, "", new { @class = "text-danger", @data_valmsg_for = "TeamBio" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.team.SportID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.sports.Count() == 0)
            {
                <span>There are no sports in the system. Please @Html.ActionLink("add a sport", "Create", "Sport") first.</span>
            }
            else
            {
                <select name="SportID">
                    @{
                        //Auto-selects the sport the team is currently assigned to
                        string selected = "";
                    }
                    @foreach (var sport in Model.sports)
                    {
                        if (Model.team.SportID == sport.SportID)
                        {
                            selected = "selected";
                        }
                        <option value="@sport.SportID" @selected>@sport.SportName</option>
                    }
                </select>
            }
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @{ string noclick = "";}
            @if (Model.sports.Count() == 0)
            {
                noclick = "disabled";
            }
            <input type="submit" value="Save" class="btn btn-default @noclick" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>
